<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Wezterm+nushell基础配置</title>
      <link href="/2025/03/02/record/wezterm%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/"/>
      <url>/2025/03/02/record/wezterm%E5%9F%BA%E7%A1%80%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="安装好wezterm后，直接在用户目录下创建-wezterm-lua-然后粘贴以下代码"><a href="#安装好wezterm后，直接在用户目录下创建-wezterm-lua-然后粘贴以下代码" class="headerlink" title="安装好wezterm后，直接在用户目录下创建.wezterm.lua,然后粘贴以下代码:"></a>安装好wezterm后，直接在用户目录下创建<code>.wezterm.lua</code>,然后粘贴以下代码:</h2><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">local</span> wezterm = <span class="built_in">require</span> <span class="string">&quot;wezterm&quot;</span></span><br><span class="line"><span class="comment">-- local config = wezterm.config_builder()</span></span><br><span class="line"><span class="keyword">local</span> act = wezterm.action</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 注册监听tab变化事件</span></span><br><span class="line">wezterm.on(<span class="string">&quot;toggle-tabbar&quot;</span>, <span class="function"><span class="keyword">function</span><span class="params">(window, _)</span></span></span><br><span class="line"><span class="keyword">local</span> overrides = window:get_config_overrides() <span class="keyword">or</span> &#123;&#125;</span><br><span class="line"><span class="keyword">if</span> overrides.enable_tab_bar == <span class="literal">false</span> <span class="keyword">then</span></span><br><span class="line">wezterm.log_info(<span class="string">&quot;tab bar shown&quot;</span>)</span><br><span class="line">overrides.enable_tab_bar = <span class="literal">true</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">wezterm.log_info(<span class="string">&quot;tab bar hidden&quot;</span>)</span><br><span class="line">overrides.enable_tab_bar = <span class="literal">false</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">window:set_config_overrides(overrides)</span><br><span class="line"><span class="keyword">end</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &#123;</span><br><span class="line"><span class="comment">-- 关闭所有默认快捷键</span></span><br><span class="line">disable_default_key_bindings = <span class="literal">true</span>,</span><br><span class="line"><span class="comment">-- 字体</span></span><br><span class="line">font = wezterm.font_with_fallback &#123;</span><br><span class="line"><span class="string">&#x27;RecMonoCasual Nerd Font&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;Maple Mono NF CN Medium&#x27;</span>,</span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">-- 字体大小</span></span><br><span class="line">font_size = <span class="number">20</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 配色方案</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 是否启用tab栏</span></span><br><span class="line">enable_tab_bar = <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 隐藏标题栏，无边框了但是在关闭tab时就不能拖动窗口</span></span><br><span class="line">window_decorations = <span class="string">&quot;RESIZE&quot;</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 配色</span></span><br><span class="line">color_scheme = <span class="string">&#x27;Catppuccin Frappe&#x27;</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 强制使用 OpenGL 渲染</span></span><br><span class="line">front_end = <span class="string">&quot;OpenGL&quot;</span>,</span><br><span class="line"><span class="comment">-- 限制帧率与显示器刷新率匹配</span></span><br><span class="line">max_fps = <span class="number">60</span>,</span><br><span class="line"><span class="comment">-- 确保在 Windows 下关闭 Wayland</span></span><br><span class="line">enable_wayland = <span class="literal">false</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 默认shell</span></span><br><span class="line">default_prog = &#123; <span class="string">&#x27;D:/nushell/bin/nu.exe&#x27;</span> &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 启用连字符</span></span><br><span class="line">harfbuzz_features = &#123; <span class="string">&quot;clig=1&quot;</span>, <span class="string">&quot;dlig=1&quot;</span> &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 单标签时自动隐藏</span></span><br><span class="line"><span class="comment">-- hide_tab_bar_if_only_one_tab = true,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 是否启用花哨标签栏</span></span><br><span class="line">use_fancy_tab_bar = <span class="literal">true</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 光标样式</span></span><br><span class="line">default_cursor_style = <span class="string">&quot;BlinkingBar&quot;</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 标签栏置底</span></span><br><span class="line"><span class="comment">-- tab_bar_at_bottom = true,</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 窗体样式</span></span><br><span class="line">window_frame = &#123;</span><br><span class="line">font_size = <span class="number">12.0</span>,</span><br><span class="line"></span><br><span class="line">active_titlebar_bg = <span class="string">&#x27;#5F6A6A&#x27;</span>,</span><br><span class="line">inactive_titlebar_bg = <span class="string">&#x27;#5F6A6A&#x27;</span>,</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 颜色</span></span><br><span class="line">colors = &#123;</span><br><span class="line"><span class="comment">-- tab栏</span></span><br><span class="line">tab_bar = &#123;</span><br><span class="line">inactive_tab_edge = <span class="string">&#x27;#575757&#x27;</span>,</span><br><span class="line">active_tab = &#123;</span><br><span class="line">fg_color = <span class="string">&quot;#566573&quot;</span>,</span><br><span class="line">bg_color = <span class="string">&quot;#FAE5D3&quot;</span>,</span><br><span class="line">&#125;,</span><br><span class="line">inactive_tab = &#123;</span><br><span class="line">fg_color = <span class="string">&quot;#5d5d5d&quot;</span>,</span><br><span class="line">bg_color = <span class="string">&quot;#282828&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 配置快捷键</span></span><br><span class="line">keys = &#123;</span><br><span class="line"><span class="comment">-- ctrl+v 粘贴</span></span><br><span class="line">&#123; key = <span class="string">&#x27;v&#x27;</span>, mods = <span class="string">&#x27;CTRL&#x27;</span>, action = act.PasteFrom <span class="string">&#x27;Clipboard&#x27;</span> &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 显示/隐藏tab栏</span></span><br><span class="line">&#123; key = <span class="string">&quot;T&quot;</span>, mods = <span class="string">&quot;CTRL&quot;</span>, action = act.EmitEvent(<span class="string">&quot;toggle-tabbar&quot;</span>) &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 新建标签页</span></span><br><span class="line">&#123; key = <span class="string">&quot;N&quot;</span>, mods = <span class="string">&quot;CTRL&quot;</span>, action = act.SpawnTab(<span class="string">&quot;DefaultDomain&quot;</span>) &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 安全关闭标签页</span></span><br><span class="line">&#123;</span><br><span class="line">key = <span class="string">&quot;K&quot;</span>,</span><br><span class="line">mods = <span class="string">&quot;CTRL&quot;</span>,</span><br><span class="line">action = act.Multiple &#123;</span><br><span class="line">act.CloseCurrentTab &#123; confirm = <span class="literal">false</span> &#125;,</span><br><span class="line">act.EmitEvent(<span class="string">&quot;trigger-tabbar-refresh&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 按 F11 切换全屏</span></span><br><span class="line">&#123; key = <span class="string">&quot;F11&quot;</span>,        mods = <span class="string">&quot;&quot;</span>,           action = act.ToggleFullScreen &#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 上下滚动页面</span></span><br><span class="line">&#123;</span><br><span class="line">key = <span class="string">&quot;UpArrow&quot;</span>,</span><br><span class="line">mods = <span class="string">&quot;CTRL|SHIFT&quot;</span>,</span><br><span class="line">action = wezterm.action.ScrollByLine(<span class="number">-1</span>), <span class="comment">-- 负值表示向上滚动</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment">-- Ctrl+Shift+↓ 向下滚动一页</span></span><br><span class="line">&#123;</span><br><span class="line">key = <span class="string">&quot;DownArrow&quot;</span>,</span><br><span class="line">mods = <span class="string">&quot;CTRL|SHIFT&quot;</span>,</span><br><span class="line">action = wezterm.action.ScrollByLine(<span class="number">1</span>), <span class="comment">-- 正值表示向下滚动</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 切换标签页</span></span><br><span class="line">&#123; key = <span class="string">&quot;RightArrow&quot;</span>, mods = <span class="string">&quot;CTRL|SHIFT&quot;</span>, action = act.ActivateTabRelative(<span class="number">1</span>) &#125;, <span class="comment">-- 下一个</span></span><br><span class="line">&#123; key = <span class="string">&quot;LeftArrow&quot;</span>,  mods = <span class="string">&quot;CTRL|SHIFT&quot;</span>, action = act.ActivateTabRelative(<span class="number">-1</span>) &#125;, <span class="comment">-- 上一个</span></span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数字键切换（1-9）</span></span><br><span class="line">&#123; key = <span class="string">&quot;1&quot;</span>,          mods = <span class="string">&quot;CTRL&quot;</span>,       action = act.ActivateTab(<span class="number">0</span>) &#125;, <span class="comment">-- 第1个标签页</span></span><br><span class="line">&#123; key = <span class="string">&quot;2&quot;</span>,          mods = <span class="string">&quot;CTRL&quot;</span>,       action = act.ActivateTab(<span class="number">1</span>) &#125;,</span><br><span class="line">&#123; key = <span class="string">&quot;3&quot;</span>,          mods = <span class="string">&quot;CTRL&quot;</span>,       action = act.ActivateTab(<span class="number">2</span>) &#125;,</span><br><span class="line">&#123; key = <span class="string">&quot;4&quot;</span>,          mods = <span class="string">&quot;CTRL&quot;</span>,       action = act.ActivateTab(<span class="number">3</span>) &#125;,</span><br><span class="line">&#123; key = <span class="string">&quot;5&quot;</span>,          mods = <span class="string">&quot;CTRL&quot;</span>,       action = act.ActivateTab(<span class="number">4</span>) &#125;,</span><br><span class="line">&#123; key = <span class="string">&quot;6&quot;</span>,          mods = <span class="string">&quot;CTRL&quot;</span>,       action = act.ActivateTab(<span class="number">5</span>) &#125;,</span><br><span class="line">&#123; key = <span class="string">&quot;7&quot;</span>,          mods = <span class="string">&quot;CTRL&quot;</span>,       action = act.ActivateTab(<span class="number">6</span>) &#125;,</span><br><span class="line">&#123; key = <span class="string">&quot;8&quot;</span>,          mods = <span class="string">&quot;CTRL&quot;</span>,       action = act.ActivateTab(<span class="number">7</span>) &#125;,</span><br><span class="line">&#123; key = <span class="string">&quot;9&quot;</span>,          mods = <span class="string">&quot;CTRL&quot;</span>,       action = act.ActivateTab(<span class="number">8</span>) &#125;, <span class="comment">-- 第9个标签页</span></span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 鼠标按键绑定</span></span><br><span class="line">mouse_bindings = &#123;</span><br><span class="line"><span class="comment">-- 右键复制粘贴</span></span><br><span class="line">&#123;</span><br><span class="line">event = &#123; Down = &#123; streak = <span class="number">1</span>, button = <span class="string">&quot;Right&quot;</span> &#125; &#125;,</span><br><span class="line">mods = <span class="string">&quot;NONE&quot;</span>,</span><br><span class="line">action = wezterm.action_callback(<span class="function"><span class="keyword">function</span><span class="params">(window, pane)</span></span></span><br><span class="line"><span class="keyword">local</span> has_selection = window:get_selection_text_for_pane(pane) ~= <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">if</span> has_selection <span class="keyword">then</span></span><br><span class="line">window:perform_action(act.CopyTo(<span class="string">&quot;ClipboardAndPrimarySelection&quot;</span>), pane)</span><br><span class="line">window:perform_action(act.ClearSelection, pane)</span><br><span class="line"><span class="comment">-- else</span></span><br><span class="line"><span class="comment">-- window:perform_action(act(&#123; PasteFrom = &quot;Clipboard&quot; &#125;), pane)</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span>),</span><br><span class="line">&#125;,</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 启动时窗口居中</span></span><br><span class="line">wezterm.on(<span class="string">&quot;gui-startup&quot;</span>, <span class="function"><span class="keyword">function</span><span class="params">(cmd)</span></span></span><br><span class="line"><span class="keyword">local</span> screen = wezterm.gui.screens().active</span><br><span class="line"><span class="keyword">local</span> width, height = screen.width * <span class="number">0.7</span>, screen.height * <span class="number">0.7</span></span><br><span class="line"><span class="keyword">local</span> tab, pane, window = wezterm.mux.spawn_window(cmd <span class="keyword">or</span> &#123;</span><br><span class="line">position = &#123;</span><br><span class="line">x = (screen.width - width) / <span class="number">2</span>,</span><br><span class="line">y = (screen.height - height) / <span class="number">2</span>,</span><br><span class="line">origin = &#123; Named = screen.name &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;)</span><br><span class="line">window:gui_window():set_inner_size(width, height)</span><br><span class="line"><span class="keyword">end</span>),</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 背景</span></span><br><span class="line">background = &#123;</span><br><span class="line">&#123;</span><br><span class="line">source = &#123;</span><br><span class="line">Color = <span class="string">&quot;#303446&quot;</span></span><br><span class="line">&#125;,</span><br><span class="line">width = <span class="string">&quot;100%&quot;</span>,</span><br><span class="line">height = <span class="string">&quot;100%&quot;</span>,</span><br><span class="line">opacity = <span class="number">.97</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="如何解决按某些键屏幕内容就上移一行的问题"><a href="#如何解决按某些键屏幕内容就上移一行的问题" class="headerlink" title="如何解决按某些键屏幕内容就上移一行的问题"></a>如何解决按某些键屏幕内容就上移一行的问题</h2><p>打开nu的配置文件<code>config.nu</code>，将<code>shell_integration</code>中的<code>osc133</code>设为<code>false</code>。<br>但是理论上会减少些许功能，目前我不知道是什么功能。</p>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 终端 </tag>
            
            <tag> Terminal </tag>
            
            <tag> wezterm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>适用于Vue2的devtools安装</title>
      <link href="/2025/02/26/record/vue-devtools-5.1.1-install/"/>
      <url>/2025/02/26/record/vue-devtools-5.1.1-install/</url>
      
        <content type="html"><![CDATA[<h2 id="下载源代码"><a href="#下载源代码" class="headerlink" title="下载源代码"></a>下载源代码</h2><p><code>目前测试只有很旧的版本才能用，谷歌浏览器里的v7, v6, v5全都不能用</code><br>发布页: <a href="https://github.com/vuejs/devtools-v6/releases">https://github.com/vuejs/devtools-v6/releases</a><br>链接: <a href="https://github.com/vuejs/devtools-v6/archive/refs/tags/v5.1.1.zip">https://github.com/vuejs/devtools-v6/archive/refs/tags/v5.1.1.zip</a></p><h2 id="手动构建"><a href="#手动构建" class="headerlink" title="手动构建"></a>手动构建</h2><ol><li>解压下载好的压缩包，并进入压缩包根目录</li><li>安装yarn, 终端运行<code>npm i yarn -g</code></li><li>运行: <code>yarn install</code>来安装依赖，这可能花点时间</li><li>执行构建指令: <code>npm run build</code>, 但是大概率会报<code>ERR_OSSL_EVP_UNSUPPORTED</code>这个错误<br>原因是因为我们的nodejs版本过高，我测试时的版本是18的，没测过16，但是网上说似乎可行。无所谓，解决办法就是:在<code>package.json</code>的<code>build</code>命令中加一句<code>set NODE_OPTIONS=--openssl-legacy-provider &amp;&amp;</code>就行。</li><li>然后重新执行<code>npm run build</code>，执行完毕后将根目录下的<code>shells/chrome</code>文件夹拖到chrome浏览器中正常安装就行，记得是拓展页面。</li><li>安装后会报个小错误，因为这个插件的版本太老了，导致chrome提示你配置文件中的有些配置已经弃用了，直接点清除,无视就行。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> 浏览器 </tag>
            
            <tag> 插件 </tag>
            
            <tag> Javascript </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oh-my-posh与nushell的安装和配置</title>
      <link href="/2025/01/27/record/oh-my-posh/"/>
      <url>/2025/01/27/record/oh-my-posh/</url>
      
        <content type="html"><![CDATA[<h2 id="oh-my-posh安装"><a href="#oh-my-posh安装" class="headerlink" title="oh-my-posh安装"></a>oh-my-posh安装</h2><p>oh-my-posh的官网:<br><a href="https://ohmyposh.dev/">https://ohmyposh.dev/</a></p><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><p>首先，我们需要下载oh-my-posh。点击官网主页的右上角github图标，进入项目<br><img src="/./img/posts_img/record/oh-my-posh/homepage.png"><br>看到这个页面就是了, star数比较多。<br><img src="/./img/posts_img/record/oh-my-posh/github.png"><br>点击右边的<strong>releases</strong>进入发布页下载文件<br><img src="/./img/posts_img/record/oh-my-posh/releases.png"><br>点击这里显示所有的版本<br><img src="/./img/posts_img/record/oh-my-posh/all_releases.png"><br>选择windows64位版本的exe可执行文件，不要选msi的安装文件<br><img src="/./img/posts_img/record/oh-my-posh/posh-windows-amd64.png"></p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>下载好后，在D盘新建一个文件夹，名字叫”oh-my-posh”,把下载好的文件放进去，再在这个文件夹里新建一个文件夹，名字叫”themes”,themes里面就是最终我们放各种主题的地方。最终效果如下:<br><img src="/./img/posts_img/record/oh-my-posh/folder.png"></p><p>然后我们设置环境变量:<br>在系统环境变量里新建一个环境变量:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">名字: POSH_THEMES_PATH</span><br><span class="line">值: D:\oh-my-posh\themes</span><br></pre></td></tr></table></figure><p>然后将<code>D:\oh-my-posh</code>目录添加到系统环境变量的<code>Path</code>中。<br>至此，oh-my-posh安装完毕，下面我们开始配置<code>NuShell</code>。</p><h2 id="NuShell安装"><a href="#NuShell安装" class="headerlink" title="NuShell安装"></a>NuShell安装</h2><p>我们打开NuShell官网的中文版:<a href="https://www.nushell.sh/zh-CN/">https://www.nushell.sh/zh-CN/</a><br><img src="/./img/posts_img/record/oh-my-posh/nushell.png"><br>同样，我们点击右上角的github按钮，进入到项目主页:<br><img src="/./img/posts_img/record/oh-my-posh/nushell_github.png"><br>看到这个star数很高的就对了<br><img src="/./img/posts_img/record/oh-my-posh/nushell_github_homepage.png"><br>我们继续点击releases进入到发布页，并点击展开所有版本<br><img src="/./img/posts_img/record/oh-my-posh/nushell_releases_btn.png"><br><img src="/./img/posts_img/record/oh-my-posh/nushell_releases.png"><br>我们找到windows版本的，并且是zip版，解压即用，不用安装, 直接下载<br><img src="/./img/posts_img/record/oh-my-posh/nushell_download.png"><br>将下载好的压缩包解压，一般我们用7z, 其他的压缩软件都可以:<br><img src="/./img/posts_img/record/oh-my-posh/7zip.png"><br>然后你会看到这些文件<br><img src="/./img/posts_img/record/oh-my-posh/nushell_files.png"><br>同样，在D盘新建一个文件夹，并命名为”nushell”，然后将这些文件放进去，并且将这个路径添加到系统环境变量的<code>Path</code>中，以便在任意地方能访问</p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>接下来配置nushell和oh-my-posh</p><ol><li>打开任意终端，cmd或者PowerShell，输入<code>nu</code>，回车，这时将进入到NuShell中</li><li>在nushell中输入<code>oh-my-posh init nu</code>,之后会生成文件:<code>~/.oh-my-posh.nu</code><br><img src="/./img/posts_img/record/oh-my-posh/init-nu.png"></li><li>接着在nushell中输入<code>echo $nu.config-path</code>,就可以得到配置文件的地址<br><img src="/./img/posts_img/record/oh-my-posh/config-path.png"></li><li>使用任意编辑器打开该文件，并在末尾填入<code>source ~/.oh-my-posh.nu</code>,这样在nushell打开时会执行其中的脚本以加载oh-my-posh</li></ol><p>现在打开nushell就能看到比较好看的新主题了。</p><h2 id="修改主题"><a href="#修改主题" class="headerlink" title="修改主题"></a>修改主题</h2><ol><li>首先要将oh-my-posh项目克隆或下载到本地，如果是下载的，就解压后将themes目录里面的所有文件放到oh-my-posh目录的themes中。</li><li>任意编辑器，打开初始化脚本<code>~/.oh-my-posh.nu</code>。</li><li>找到定义<code>$env.POSH_THEME</code>的这一行，将后面的路径替换为themes目录中的任意文件即可替换主题。</li></ol><h2 id="设置newline"><a href="#设置newline" class="headerlink" title="设置newline"></a>设置newline</h2><ol><li>找到之前当前使用的主题配置文件，最好先复制一份，然后任意编辑器打开。</li><li>在blocks数组最后一项后面添加以下代码:</li></ol><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;alignment&quot;</span><span class="punctuation">:</span> <span class="string">&quot;left&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;newline&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;segments&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="comment">// &quot;foreground&quot;: &quot;blue&quot;,</span></span><br><span class="line">            <span class="attr">&quot;foreground_templates&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;&#123;&#123; if eq .Code 0 &#125;&#125;#87efff&#123;&#123; else &#125;&#125;red&#123;&#123; end &#125;&#125;&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;style&quot;</span><span class="punctuation">:</span> <span class="string">&quot;plain&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="comment">// 可以使用条件语句实现变换提示符</span></span><br><span class="line">            <span class="comment">// &quot;template&quot;: &quot;&#123;&#123; if eq .Code 0 &#125;&#125;😄&#123;&#123; else &#125;&#125;😢&#123;&#123; end &#125;&#125;&quot;,</span></span><br><span class="line">            <span class="attr">&quot;template&quot;</span><span class="punctuation">:</span> <span class="string">&quot;\ue602&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;text&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;prompt&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> oh-my-posh </tag>
            
            <tag> shell </tag>
            
            <tag> 终端 </tag>
            
            <tag> 美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>KMP算法</title>
      <link href="/2025/01/08/algo/KMP%E7%AE%97%E6%B3%95/"/>
      <url>/2025/01/08/algo/KMP%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是KMP算法"><a href="#什么是KMP算法" class="headerlink" title="什么是KMP算法"></a>什么是KMP算法</h2><p>KMP算法是一种字符串匹配(查找)算法，旨在快速查找<code>子串</code>在<code>主串</code>中的位置。</p><h2 id="next数组"><a href="#next数组" class="headerlink" title="next数组"></a>next数组</h2><p>next数组的被定义为表示子串的<code>最长相等前后缀</code>。</p><p>举个🌰:</p><p>对于字符串<code>ABACABAB</code>，其对应的next数组如下:</p><table><thead><tr><th align="center">A</th><th align="center">B</th><th align="center">A</th><th align="center">C</th><th align="center">A</th><th align="center">B</th><th align="center">A</th><th align="center">B</th></tr></thead><tbody><tr><td align="center">0</td><td align="center">0</td><td align="center">1</td><td align="center">0</td><td align="center">1</td><td align="center">2</td><td align="center">3</td><td align="center">2</td></tr></tbody></table><p>当比较到以下步骤时：</p><p><img src="/./img/posts_img/algo/KMP%E7%AE%97%E6%B3%95/next.png" alt="关键步骤"></p><p>出现不匹配情况，但是不能直接把当前i为认为是0，而是应该回退到之前最长的结果再进行比较</p><p><img src="/./img/posts_img/algo/KMP%E7%AE%97%E6%B3%95/next1.png" alt="关键步骤"></p><p>因为前后两段的<code>前缀</code>是相同的，所以可以把后面的<code>B</code>拿到前面那段去，将<code>C</code>换成<code>B</code>，然后得到的结果是等价的：</p><p><img src="/./img/posts_img/algo/KMP%E7%AE%97%E6%B3%95/next2.png" alt="关键步骤"></p><p>此时我们可以观察当前pl位的前面的<code>最长相等前后缀</code>是多少，然后跳过该长度的前缀接着比较：</p><p><img src="/./img/posts_img/algo/KMP%E7%AE%97%E6%B3%95/next3.png" alt="关键步骤"></p><p>能看到前面的<code>最长相等前后缀</code>是<code>1</code>，所以将<code>pl</code>回退到开头，但跳过1个字符，也就是到了<code>B</code>处:</p><p><img src="/./img/posts_img/algo/KMP%E7%AE%97%E6%B3%95/next4.png" alt="关键步骤"></p><p>此时再比较发现能够匹配了，加上之前的结果，因此当前<code>pl</code>位置应当是<code>2</code>，这才是正确的结果。</p><p><img src="/./img/posts_img/algo/KMP%E7%AE%97%E6%B3%95/next5.png" alt="关键步骤"></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>张祥前的《统一场论 》</title>
      <link href="/2025/01/05/anything/%E7%BB%9F%E4%B8%80%E5%9C%BA%E8%AE%BA/"/>
      <url>/2025/01/05/anything/%E7%BB%9F%E4%B8%80%E5%9C%BA%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<blockquote><p>张祥前是谁?</p></blockquote><p>他是一个普通人，初中学历，他说自己四十年前被外星人带走过，在外星球住了一段时间，回来的时候脑袋里多了一些<code>知识</code>，他命名为”统一场论”，该理论试图描述这个宇宙的<code>真相</code>。</p><blockquote><p>接下来的内容是我对他理论的理解，不讨论真实与否，仅仅当作一个有趣的话题，或者说一种思路。</p></blockquote><h2 id="宇宙的构成"><a href="#宇宙的构成" class="headerlink" title="宇宙的构成"></a>宇宙的构成</h2><p>宇宙由两部分构成: <code>物体</code>和<code>空间</code>。</p><p>宇宙没有<code>开始</code>，没有<code>结束</code>。</p><p>我们所<code>感知</code>到的世界是<code>虚假的</code>，不是真实的宇宙，是我们<code>观察者</code>对<code>感觉</code>的<code>描述</code>，脱离了<code>观察者</code>统统不存在。</p><p>比如，颜色的本质是<code>不同波长的光</code>，声音的本质是<code>不同频率的震动</code>，还有<code>跑</code>、<code>跳</code>、<code>飞</code>、<code>走</code>…等等这些都是我们<code>观察者</code>对<code>物体运动</code>和<code>空间运动</code>的描述。一旦脱离了<code>观察者</code>都不存在。换句话说，不同的<code>观察者</code>对<code>同一运动</code>的描述是不同的。</p><h2 id="生物和事物为什么要“死”"><a href="#生物和事物为什么要“死”" class="headerlink" title="生物和事物为什么要“死”"></a>生物和事物为什么要“死”</h2><p>宇宙的存在的意义在于让<code>展示</code>，展示<code>一切的可能性</code>，当一个生物或事物存在的时间越久，他的<code>信息</code>就越<code>具象</code>、越<code>固化</code>，其包含的<code>可能性</code>也在不断减少，为了继续<code>展示</code>剩余的<code>可能性</code>，需要用<code>新的事物</code>来接替<code>旧的事物</code>，以便继续展示<code>剩余的可能性</code>。</p><h2 id="宇宙的数量"><a href="#宇宙的数量" class="headerlink" title="宇宙的数量"></a>宇宙的数量</h2><p>宇宙有<code>2</code>个，一个是<code>真实的宇宙</code>，另一个是<code>虚假的宇宙</code>，也就是我们<code>身处的宇宙</code>，<code>虚假的宇宙</code>是在<code>真实的宇宙</code>的基础上，加上我们<code>观察者</code>的<code>描述</code>诞生的，可以理解为是一种<code>概念</code>而非实际存在的东西。</p><p>比如一只<code>“A颜色”</code>的狗，他是真实存在的。但有两个人，或者说两个<code>观察者</code>，他们对于<code>“A颜色”</code>的描述是不同的，<code>“观察者A”</code>认为<code>“A颜色”</code>是红色，但<code>“观察者B”</code>认为<code>“A颜色”</code>是蓝色，所以对于他们来说，这只狗就是他们所认为的颜色的。宇宙也是同理，<code>真实的宇宙</code>只有一个，但是不同的<code>观察者</code>所在的<code>宇宙</code>不同，他们都只在自己的<code>宇宙</code>。</p><h2 id="空间的运动方式"><a href="#空间的运动方式" class="headerlink" title="空间的运动方式"></a>空间的运动方式</h2><p>宇宙中的<code>物体</code>，其周围的<code>空间</code>无时无刻都在以<code>光速</code>向四周<code>发散运动</code>。<br><img src="/./img/posts_img/anything/%E7%BB%9F%E4%B8%80%E5%9C%BA%E8%AE%BA/space.png" alt="空间的发散"></p><h2 id="什么是时间"><a href="#什么是时间" class="headerlink" title="什么是时间"></a>什么是时间</h2><p><u>时间不存在。</u></p><p>时间是一种<code>感觉</code>，是<code>观察者</code>对于<code>空间在以光速发散运动</code>的感觉。所谓的单位，比如<code>年</code>、<code>月</code>、<code>日</code>、<code>时</code>、<code>分</code>、<code>秒</code>这些<code>时间单位</code>实际上是对于<code>感觉</code>的单位，比如，如果我问你：“从早上吃完早饭到现在，空间发散了多少？”，你可能无法回答，因为你心里有那种<code>感觉</code>，但是无法描述，所以人们为了描述这种<code>感觉</code>，发明了<code>时间</code>，以前我们想描述一段时间，会用<code>一炷香</code>，只要一提到<code>一炷香</code>，这种感觉就能具象化，别人就能<code>感受</code>到这个<code>感觉</code>，现在仍然如此，只是时间变成了更精确的<code>年月日时分秒</code>。</p><p>所以，时间是不存在的，或者说<code>时间</code>只是一种<code>概念</code>或一种<code>描述</code>。诶，这和上面提到的就呼应上了，我们所在的宇宙，都是由我们<code>描述</code>出来的，对<code>感觉</code>的描述，这种感觉就是<code>空间在以光速发散</code>。</p><h2 id="宇宙的维度"><a href="#宇宙的维度" class="headerlink" title="宇宙的维度"></a>宇宙的维度</h2><p>我们所处的空间是<strong>三维</strong>的。</p><ul><li><strong>一维</strong>: 空间以直线运动</li><li><strong>二维</strong>: 空间以曲线运动</li><li><strong>三维</strong>: 空间以圆柱状螺旋式运动</li></ul><p>宇宙的一切都在以<code>螺旋式</code>运动，在宇宙中，<code>螺旋</code>就是<code>和谐</code>，就是<code>稳定</code>，就是<code>美</code>。</p><h2 id="光速为什么不变"><a href="#光速为什么不变" class="headerlink" title="光速为什么不变"></a>光速为什么不变</h2><p>首先，什么是<code>“光速不变”</code>？</p><p><code>光速不变</code>指的是<code>光</code>在真空中的传播速度是不变的，不会受到<code>光源的运动状态</code>和<code>观察者的运动状态</code>的影响。打个比方：你在一辆<code>高速行驶</code>的车上扔一个苹果比你<code>站在原地</code>扔一个苹果，扔出的苹果飞的更快更远。再比如：一辆以<code>60km/h</code>行驶的车，你站在原地测得的速度是<code>60km/h</code>，但如果你在另一辆同样以<code>60km/h</code>行驶的车上测，那么它的速度就是<code>0</code>，简单地说就是你俩<code>相对静止</code>了。</p><p>但光不是这样的，不管你以哪种运动状态测，不管光源的运动状态如何，你测的的光速都是<code>不变的</code>。</p><p>这是为什么呢？</p><p>统一场论认为：<code>光</code>是<code>静止</code>在空间中的，<code>光</code>本身没有动，是空间的<code>发散</code>带动了<code>光</code>，因为空间在以<code>光速</code>发散运动，所以在我们<code>观察者</code>看来，<code>光</code>在以<code>光速</code>运动，所以又绕回来了，所谓的<code>光速不变</code>只是我们<code>观察者</code>，<code>观察</code>出来的，不是<code>本质</code>，只是我们对<code>观察到的现象</code>的描述，我们观察到<code>光速不变</code>，换句话说<code>光速不变</code>是结论，<code>观察</code>后的<code>结论</code>。所以所谓的<code>光速</code>其实是<code>空间的速度</code>，而不是<code>光的速度</code>。</p><p>用公式表示就是:</p><p>$$ r &#x3D; c * t $$</p><p>$$ c &#x3D; \frac{r}{t} $$</p><p>其中，<code>c</code>表示<code>光速</code>，<code>r</code>表示<code>空间发散的量</code>，或者说<code>发散出去的空间走过的路程</code>,<code>t</code>表示<code>时间</code>。一旦时间<code>t</code>增大，那么“<code>路程</code>”<code>r</code>必然也会增大，因为分子分母同时变化，所以光速<code>c</code>始终不变。</p><h2 id="质量与重量"><a href="#质量与重量" class="headerlink" title="质量与重量"></a>质量与重量</h2><p>什么是<code>重量</code>和<code>质量</code>。</p><ul><li><strong>质量</strong>: 物体周围<code>以光速运动的空间</code>的<code>数量</code>。</li><li><strong>重量</strong>：在质量的基础上，与<code>引力</code>叠加的值。</li></ul><p>在相同的密度下，<code>体积</code>越大，质量就越大：<br><img src="/./img/posts_img/anything/%E7%BB%9F%E4%B8%80%E5%9C%BA%E8%AE%BA/%E8%B4%A8%E9%87%8F.png" alt="质量"></p><p>同样，在相同的体积下，<code>密度</code>越大，质量就越大。</p><h2 id="如何以光速运动"><a href="#如何以光速运动" class="headerlink" title="如何以光速运动"></a>如何以光速运动</h2><p>当一个物体的<code>质量为0</code>，就会自动以光速运动。</p><p>为什么呢？因为当物体质量为0时，意味着没有空间穿过他:<br><img src="/./img/posts_img/anything/%E7%BB%9F%E4%B8%80%E5%9C%BA%E8%AE%BA/%E5%85%89%E9%80%9F%E8%BF%90%E5%8A%A8.png" alt="光速运动"></p><p>当物体以光速运动时，他与<code>发散的空间</code>相对静止，所以就没有空间<code>穿过他</code>，也没有空间从它向外<code>发散</code>。</p><blockquote><p>这里的<code>运动</code>，我猜不是我们平常所说的<code>运动</code>，可能也只是一种概念，不是真正的在<code>动</code>，何况<code>运动</code>本身就是相对的，是我们描述出来的，并不是<code>真相</code>，就如时间一样。所以，所谓的<code>以光速运动</code>可能并不是简单的沿某个方向运动，上图只是一种简单的比喻，用我们平时所说的传统的<code>运动</code>来比喻。</p></blockquote><p>我们能看到或摸到一个物体，是因为其有<code>质量</code>，有<code>空间</code>从中穿过，所以，当一个物体质量减到<code>0</code>，以光速运动时，他就会<code>瞬间从我们眼前消失</code>，因为他无法在我们的<code>三维</code>空间中<code>成像</code>。并且，即使一个物体的质量没有减到<code>0</code>，但只要减到大约<code>90%及以上</code>，就能实现所谓的<code>穿墙</code>，在我们眼里，可能就是<code>半透明</code>的？</p><h2 id="钟慢尺缩"><a href="#钟慢尺缩" class="headerlink" title="钟慢尺缩"></a>钟慢尺缩</h2><p>相对论说：“当物体以接近光速运动时，该物体的<code>时间</code>会变慢，<code>空间</code>会缩短”。</p><p>有以下场景：<br>一个<code>长10米，宽6米</code>的房子以<code>0.8倍光速</code>朝前方高速移动，半小时后回到出发点。</p><ul><li><p><strong>钟慢</strong>：房子里出来的人拿出手表和外面的人的手表进行对比，会发现时间<code>慢了</code>。也就是：外面的手表显示的是<code>8点</code>，但是房子里出来的人的手表显示的是<code>7点半</code>。</p></li><li><p><strong>尺缩</strong>：对于房子外静止在原地的人来说，房子的长度变<code>短了</code>，实际上不是房子变短了，而是房子所处的空间变短了。但是对于房子里的人来说，房子的长度仍然是10米。</p></li></ul><p>为什么会出现这种情况呢？结合上面的内容可以知道，<code>时间</code>并不存在，时间只是空间的发散，所以当你的速度越快，空间的发散速度就相对越<code>小</code>，所以我们的<code>时间</code>就慢了。尺缩也是同样的道理，空间发散的越慢，对应的你和<code>上一条空间</code>的距离就越小，所以尺就缩了。然而实际上根据上面的内容可以知道，时间和空间本就是一体的，时间就是空间，所以<code>钟慢了</code>，尺必定就会<code>缩</code>。所谓的<code>时空</code>实际上是一个东西，而不是<code>时、空</code>。</p><h2 id="二维空间"><a href="#二维空间" class="headerlink" title="二维空间"></a>二维空间</h2><p>二维空间比三维空间<code>“高级”</code>。</p><p>二维空间才是那个<code>真实的宇宙</code>，在二维空间里，不存在<code>距离</code>。因为没有<code>距离</code>，当然也就不存在<code>时间</code>。二维空间中的任何信息，能瞬间铺满三维空间。</p><h2 id="量子纠缠"><a href="#量子纠缠" class="headerlink" title="量子纠缠"></a>量子纠缠</h2><p>相隔很远的两个粒子，似乎存在某种联系，这种联系能够让他们即使相隔非常远的距离，也能<code>瞬间同步状态</code>，即使相隔的距离以<code>光年</code>为单位。但是我们知道，宇宙中信息传递的速度上限就是光速，不存在<code>超光速</code>传递信息的方法，所以这种联系有点超越经典物理学的意思。</p><p>统一场论认为：两个光子在以光速运动时，会进入<code>二维</code>空间，二维空间不存在<code>距离</code>，所以能够在很远的距离下完成<code>瞬间同步</code>。我们看到的<code>超光速</code>传递信息的现象，是我们三维世界的<code>观察者</code>以自身的视角观察得到的<code>现象</code>，正如上面提到的，并不是<code>真相</code>，是我们在我们的视角看到的现象，就和运动一样，不同的视角看到的运动是不同的，因为我们处在<code>三维</code>空间，有<code>距离</code>的概念，但<code>二维</code>空间不存在距离，所以映射到我们三维世界就会出现这种<code>反常识</code>的现象，就是<code>超光速</code>。</p><h2 id="苹果落到地上"><a href="#苹果落到地上" class="headerlink" title="苹果落到地上"></a>苹果落到地上</h2><p>统一场论认为：苹果落到地上并不是引力把苹果拉到地上的，而是引力把苹果所在的<code>空间</code>拉到了地上，所以苹果也被<code>带</code>到了地上。所以是空间在动，而不是苹果在动。</p>]]></content>
      
      
      <categories>
          
          <category> 啥都聊 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 统一场论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表</title>
      <link href="/2025/01/05/data_structure/%E9%93%BE%E8%A1%A8/"/>
      <url>/2025/01/05/data_structure/%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<blockquote><p>以下所说的链表仅仅指简单的”单链表”,稍复杂点的不在这里讨论</p></blockquote><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>链表就是由一个个<a href="#%E8%8A%82%E7%82%B9">节点</a>连接起来的结构,就像它的名字一样,”<code>链</code>表”</p><p><img src="/./img/posts_img/data_structure/%E9%93%BE%E8%A1%A8/lls.png" alt="链表"></p><h2 id="节点"><a href="#节点" class="headerlink" title="节点"></a>节点</h2><p>每个节点都拥有两个属性,分别是<code>value</code>和<code>next</code>,value存储当前节点的<code>值</code>,而next存储<code>下一个节点</code></p><h2 id="为什么要用链表"><a href="#为什么要用链表" class="headerlink" title="为什么要用链表?"></a>为什么要用链表?</h2><p>一个最容易想到的原因就是<code>内存碎片化</code>:</p><p>当我们需要存储一个数组时,我们就需要一段连续的内存地址,但如果此时内存是以下状态:</p><p><img src="/./img/posts_img/data_structure/%E9%93%BE%E8%A1%A8/%E9%93%BE%E8%A1%A8.png" alt="内存碎片化"></p><p>那么就没有足够的空间来存储该数组,即使有空余的内存,但因为其是分散在各个地方而不相邻的,所以无法满足数组的<code>连续性</code>要求,这就导致了资源的浪费</p><p>但如果我们使用链表就可以较为充分的利用这些<code>碎片</code></p><p><img src="/./img/posts_img/data_structure/%E9%93%BE%E8%A1%A8/%E9%93%BE%E8%A1%A81.png" alt="链表"></p><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>以下是链表的JavaScript实现简单方式,每个人可能都要不同的自己的实现方式,仅供参考</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 节点的实现</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Node</span> &#123;</span><br><span class="line">    val;</span><br><span class="line">    next;</span><br><span class="line">    <span class="title function_">constructor</span>(<span class="params">val</span>) &#123;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">val</span> = val;</span><br><span class="line">        <span class="variable language_">this</span>.<span class="property">next</span> = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 简单的单链表可以直接将一个个node连接起来就能表示</span></span><br><span class="line"><span class="comment">// 可以不需要具体的实现代码</span></span><br><span class="line"><span class="keyword">let</span> node1 = <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">let</span> node2 = <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="number">2</span>);</span><br><span class="line"><span class="keyword">let</span> node3 = <span class="keyword">new</span> <span class="title class_">Node</span>(<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接起来</span></span><br><span class="line">node1.<span class="property">next</span> = node2;</span><br><span class="line">node3.<span class="property">next</span> = node3;</span><br></pre></td></tr></table></figure><p>这样我们就实现了简单的链表, 可以进行简单的遍历查找操作</p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript简单介绍</title>
      <link href="/2025/01/04/languages/JavaScript%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
      <url>/2025/01/04/languages/JavaScript%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<p><img src="/img/avatar/Chisato.jpg"></p><p>废话不多说,直接上干货</p><h2 id="输出语句"><a href="#输出语句" class="headerlink" title="输出语句"></a>输出语句</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 老规矩,输出&quot;hello world&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h2><p>JS使用<code>let</code>关键字声明和定义变量, 不需要指定变量的<code>类型</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个number类型的变量&quot;a&quot;</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个string类型的变量&quot;b&quot;</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="string">&quot;三七&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="定义常量"><a href="#定义常量" class="headerlink" title="定义常量"></a>定义常量</h2><p>与定义变量类似, 只需要将<code>let</code>换成<code>const</code>即可定义常量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> age = <span class="number">18</span>;</span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ol><li><code>string</code> (字符串)</li></ol><p>JS的字符串支持使用单引号<code>&#39;</code>和双引号<code>&quot;</code>来定义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这是一个合法的字符串</span></span><br><span class="line"><span class="keyword">let</span> s = <span class="string">&quot;你好,世界&quot;</span>;</span><br><span class="line"><span class="comment">// 这也是一个合法的字符串</span></span><br><span class="line"><span class="keyword">let</span> s = <span class="string">&quot;你好,世界&quot;</span>;</span><br></pre></td></tr></table></figure><p>当我们想在字符串里直接放<code>变量</code>,使用”`“来定义字符串即可,类似于Python的<code>f-string</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;三七&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> hello = <span class="string">`Hello,<span class="subst">$&#123;name&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// output: &quot;Hello,三七&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><code>number</code> (数字)</li></ol><p>JS的数字包含了整数和小数,其他语言中叫做<code>int</code>和<code>float</code>,这些在JS中统称为<code>number</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 整数;</span></span><br><span class="line"><span class="keyword">let</span> n = <span class="number">520</span>;</span><br><span class="line"><span class="comment">// 小数;</span></span><br><span class="line"><span class="keyword">let</span> n = <span class="number">3.14</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li><code>boolean</code> (布尔值)</li></ol><p>布尔值嘛,和其他<code>C Like</code>语言一样,如<code>Java</code>,使用<code>true</code>和<code>false</code>来表示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 真;</span></span><br><span class="line"><span class="keyword">let</span> t = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// 假;</span></span><br><span class="line"><span class="keyword">let</span> f = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li><code>object</code> (对象)</li></ol><p>JS的<code>对象</code>更像是<code>键值对</code>,通过<code>键</code>对应<code>值</code>,通过<code>.</code>运算符访问<code>属性</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个对象,包含属性&quot;name&quot;和&quot;age&quot;</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">name</span>: <span class="string">&quot;SanQi&quot;</span>, <span class="attr">age</span>: <span class="number">21</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过 obj.name 来访问obj的name属性</span></span><br><span class="line"><span class="keyword">let</span> name = obj.<span class="property">name</span>;</span><br></pre></td></tr></table></figure><ol start="5"><li><code>undefined</code> (未定义)</li></ol><p>当仅仅是声明了一个变量,而未定义其值,比如:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a;</span><br></pre></td></tr></table></figure><p>这时,a的值为<code>undefined</code>,意为<code>未定义</code></p><ol start="6"><li><code>null</code> (空值)</li></ol><p>JS的<code>null</code>和其他<code>C Like</code>语言一样,如<code>Java</code>,表示<code>空</code>或<code>没有对象</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> value = <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ol><li>算术运算符</li></ol><p>和其他<code>C Like</code>语言一样,如<code>Java</code>, 这里不多赘述</p><ol start="2"><li>比较运算符</li></ol><p>和其他<code>C Like</code>语言一样,如<code>Java</code>, 这里不多赘述, 但需要提一下:<br>在JS中存在<code>绝对等于</code>或者叫<code>全等</code>运算符, 使用<code>===</code>表示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> b = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a == b); <span class="comment">// output: true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a === b); <span class="comment">// output: false</span></span><br></pre></td></tr></table></figure><ol start="3"><li>逻辑运算符</li></ol><p>和其他<code>C Like</code>语言一样,如<code>Java</code>, 这里不多赘述</p><h2 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h2><p>和其他<code>C Like</code>语言一样,如<code>Java</code>, 这里不多赘述, 仅举个例子:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (a &gt; <span class="number">90</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a &gt; <span class="number">80</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><p>同<code>条件语句</code>, 这里不多赘述, 举个例子:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for循环</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// output: 1, 2, 3, 4, 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// while循环</span></span><br><span class="line"><span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; <span class="number">5</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// output: 1, 2, 3, 4, 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// do...while语句也是类似, 这里就不多说了</span></span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ol><li>普通函数</li></ol><p>使用<code>function</code>关键字来定义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>匿名函数</li></ol><p>不用<code>函数名</code>, 直接把函数赋值给一个变量就行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> add = <span class="keyword">function</span>(<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="3"><li>箭头函数(lambda表达式)</li></ol><p>极致的精简, 不需要<code>function</code>关键字, 用以下方式定义:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">add</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>和<code>Python</code>类似, JS的数组用<code>[]</code>来表示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br></pre></td></tr></table></figure><p>同样, JS的数组支持任意类型的元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">3.14</span>, <span class="literal">true</span>, <span class="string">&quot;hello&quot;</span>];</span><br></pre></td></tr></table></figure><p>如何访问呢? 嘿嘿, 聪明的你可能已经猜到了, 没错, 就是使用<code>下标</code>来访问</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">0</span>]); <span class="comment">// output: 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">1</span>]); <span class="comment">// output: 2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">2</span>]); <span class="comment">// output: 3</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 语言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 后端 </tag>
            
            <tag> 基础 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
