<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaScript简单介绍</title>
      <link href="/2025/01/04/JavaScript%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/"/>
      <url>/2025/01/04/JavaScript%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D/</url>
      
        <content type="html"><![CDATA[<p>废话不多说,直接上干货</p><h2 id="输出语句"><a href="#输出语句" class="headerlink" title="输出语句"></a>输出语句</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 老规矩,输出&quot;hello world&quot;</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Hello World&quot;</span>);</span><br></pre></td></tr></table></figure><h2 id="定义变量"><a href="#定义变量" class="headerlink" title="定义变量"></a>定义变量</h2><p>JS使用<code>let</code>关键字声明和定义变量, 不需要指定变量的<code>类型</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个number类型的变量&quot;a&quot;</span></span><br><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个string类型的变量&quot;b&quot;</span></span><br><span class="line"><span class="keyword">let</span> b = <span class="string">&quot;三七&quot;</span>;</span><br></pre></td></tr></table></figure><h2 id="定义常量"><a href="#定义常量" class="headerlink" title="定义常量"></a>定义常量</h2><p>与定义变量类似, 只需要将<code>let</code>换成<code>const</code>即可定义常量</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> age = <span class="number">18</span>;</span><br></pre></td></tr></table></figure><h2 id="数据类型"><a href="#数据类型" class="headerlink" title="数据类型"></a>数据类型</h2><ol><li><code>string</code> (字符串)</li></ol><p>JS的字符串支持使用单引号<code>&#39;</code>和双引号<code>&quot;</code>来定义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这是一个合法的字符串</span></span><br><span class="line"><span class="keyword">let</span> s = <span class="string">&quot;你好,世界&quot;</span>;</span><br><span class="line"><span class="comment">// 这也是一个合法的字符串</span></span><br><span class="line"><span class="keyword">let</span> s = <span class="string">&quot;你好,世界&quot;</span>;</span><br></pre></td></tr></table></figure><p>当我们想在字符串里直接放<code>变量</code>,使用”`“来定义字符串即可,类似于Python的<code>f-string</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;三七&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">let</span> hello = <span class="string">`Hello,<span class="subst">$&#123;name&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// output: &quot;Hello,三七&quot;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><code>number</code> (数字) JS的数字包含了整数和小数,其他语言中叫做<code>int</code>和<code>float</code>,<br>这些在JS中统称为<code>number</code></li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 整数;</span></span><br><span class="line"><span class="keyword">let</span> n = <span class="number">520</span>;</span><br><span class="line"><span class="comment">// 小数;</span></span><br><span class="line"><span class="keyword">let</span> n = <span class="number">3.14</span>;</span><br></pre></td></tr></table></figure><ol start="3"><li><code>boolean</code> (布尔值)</li></ol><p>布尔值嘛,和其他<code>C Like</code>语言一样,如<code>Java</code>,使用<code>true</code>和<code>false</code>来表示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 真;</span></span><br><span class="line"><span class="keyword">let</span> t = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">// 假;</span></span><br><span class="line"><span class="keyword">let</span> f = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><ol start="4"><li><code>object</code> (对象)</li></ol><p>JS的<code>对象</code>更像是<code>键值对</code>,通过<code>键</code>对应<code>值</code>,通过<code>.</code>运算符访问<code>属性</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义一个对象,包含属性&quot;name&quot;和&quot;age&quot;</span></span><br><span class="line"><span class="keyword">let</span> obj = &#123; <span class="attr">name</span>: <span class="string">&quot;SanQi&quot;</span>, <span class="attr">age</span>: <span class="number">21</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过 obj.name 来访问obj的name属性</span></span><br><span class="line"><span class="keyword">let</span> name = obj.<span class="property">name</span>;</span><br></pre></td></tr></table></figure><ol start="5"><li><code>undefined</code> (未定义) 当仅仅是声明了一个变量,而未定义其值,比如:</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a;</span><br></pre></td></tr></table></figure><p>这时,a的值为<code>undefined</code>,意为<code>未定义</code></p><ol start="6"><li><code>null</code> (空值)</li></ol><p>JS的<code>null</code>和其他<code>C Like</code>语言一样,如<code>Java</code>,表示<code>空</code>或<code>没有对象</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> value = <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><ol><li>算术运算符</li></ol><p>和其他<code>C Like</code>语言一样,如<code>Java</code>, 这里不多赘述</p><ol start="2"><li>比较运算符</li></ol><p>和其他<code>C Like</code>语言一样,如<code>Java</code>, 这里不多赘述, 但需要提一下:<br>在JS中存在<code>绝对等于</code>或者叫<code>全等</code>运算符, 使用<code>===</code>表示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">let</span> b = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a == b); <span class="comment">// output: true</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a === b); <span class="comment">// output: false</span></span><br></pre></td></tr></table></figure><ol start="3"><li>逻辑运算符</li></ol><p>和其他<code>C Like</code>语言一样,如<code>Java</code>, 这里不多赘述</p><h2 id="条件语句"><a href="#条件语句" class="headerlink" title="条件语句"></a>条件语句</h2><p>和其他<code>C Like</code>语言一样,如<code>Java</code>, 这里不多赘述, 仅举个例子:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (a &gt; <span class="number">90</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;A&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a &gt; <span class="number">80</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;B&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;C&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="循环语句"><a href="#循环语句" class="headerlink" title="循环语句"></a>循环语句</h2><p>同<code>条件语句</code>, 这里不多赘述, 举个例子:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// for循环</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">5</span>; i++) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// output: 1, 2, 3, 4, 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// while循环</span></span><br><span class="line"><span class="keyword">let</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; <span class="number">5</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(i);</span><br><span class="line">    i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// output: 1, 2, 3, 4, 5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// do...while语句也是类似, 这里就不多说了</span></span><br></pre></td></tr></table></figure><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><ol><li>普通函数</li></ol><p>使用<code>function</code>关键字来定义</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">add</span>(<span class="params">a, b</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>匿名函数</li></ol><p>不用<code>函数名</code>, 直接把函数赋值给一个变量就行</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> add = <span class="keyword">function</span>(<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><ol start="3"><li>箭头函数(lambda表达式)</li></ol><p>极致的精简, 不需要<code>function</code>关键字, 用以下方式定义:</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">add</span> = (<span class="params">a, b</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> a + b;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h2><p>和<code>Python</code>类似, JS的数组用<code>[]</code>来表示</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br></pre></td></tr></table></figure><p>同样, JS的数组支持任意类型的元素</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">3.14</span>, <span class="literal">true</span>, <span class="string">&quot;hello&quot;</span>];</span><br></pre></td></tr></table></figure><p>如何方位呢? 嘿嘿, 聪明的你可能已经猜到了, 每次, 就是使用<code>下标</code>来访问</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>];</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">0</span>]); <span class="comment">// output: 1</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">1</span>]); <span class="comment">// output: 2</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(arr[<span class="number">2</span>]); <span class="comment">// output: 3</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
            <tag> 前端 </tag>
            
            <tag> 后端 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
